version: "3"

env:
  GOAMD64: v3

tasks:
  default: task --list-all

  run:
    env:
      REDIS_ADDR: "127.0.0.1:6379"
    cmds:
      - go run -v ./cmd/server/

  build:
    env:
      CGO_ENABLED: 0
    cmds:
      - go build -o server ./cmd/server/main.go
      - strip server

  build-win:
    env:
      CGO_ENABLED: 0
      GOOS: windows
      GOARCH: amd64
    cmds:
      - go build -o server.exe ./cmd/server/main.go

  test:
    cmds:
      - ginkgo run --tags test --fail-fast --randomize-all --randomize-suites -r {{.CLI_ARGS}} ./test/

  test-parallel:
    cmds:
      - ginkgo run --tags test -p --fail-fast --randomize-all --randomize-suites -r {{.CLI_ARGS}} ./test/

  cover:
    cmds:
      - >
        pkgs=($(go list ./...)) && IFS=, &&
        ginkgo run \
          --timeout 5s \
          --tags test \
          -p \
          --fail-fast \
          --randomize-all \
          --randomize-suites \
          --cover \
          --coverprofile=coverage.out \
          --coverpkg="${pkgs[*]}" \
          -r {{.CLI_ARGS}} \
          ./test/
      - go tool cover -html=coverage.out

  mutation-test:
    cmds:
      - >
        pkgs=($(go list ./...)) && IFS=, &&
        gremlins unleash --tags test --coverpkg "${pkgs[*]}"

  up: "docker compose up --build {{.CLI_ARGS}}"

  gen: go generate ./...
